package com.ibssoln.shoppers.soap.outbound.inventory.client;

import jakarta.xml.ws.*;
import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "inventoryProviderServicePortService", targetNamespace = "http://inventory.inbound.soap.shoppers.ibssoln.com/", wsdlLocation = "http://localhost:8080/ws/inventoryProviderService.wsdl")
public class InventoryProviderServicePortService
    extends Service
{

    private final static URL INVENTORYPROVIDERSERVICEPORTSERVICE_WSDL_LOCATION;
    private final static WebServiceException INVENTORYPROVIDERSERVICEPORTSERVICE_EXCEPTION;
    private final static QName INVENTORYPROVIDERSERVICEPORTSERVICE_QNAME = new QName("http://inventory.inbound.soap.shoppers.ibssoln.com/", "inventoryProviderServicePortService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/ws/inventoryProviderService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        INVENTORYPROVIDERSERVICEPORTSERVICE_WSDL_LOCATION = url;
        INVENTORYPROVIDERSERVICEPORTSERVICE_EXCEPTION = e;
    }

    public InventoryProviderServicePortService() {
        super(__getWsdlLocation(), INVENTORYPROVIDERSERVICEPORTSERVICE_QNAME);
    }

    public InventoryProviderServicePortService(WebServiceFeature... features) {
        super(__getWsdlLocation(), INVENTORYPROVIDERSERVICEPORTSERVICE_QNAME, features);
    }

    public InventoryProviderServicePortService(URL wsdlLocation) {
        super(wsdlLocation, INVENTORYPROVIDERSERVICEPORTSERVICE_QNAME);
    }

    public InventoryProviderServicePortService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, INVENTORYPROVIDERSERVICEPORTSERVICE_QNAME, features);
    }

    public InventoryProviderServicePortService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InventoryProviderServicePortService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns InventoryProviderServicePort
     */
    @WebEndpoint(name = "inventoryProviderServicePortSoap11")
    public InventoryProviderServicePort getInventoryProviderServicePortSoap11() {
        return super.getPort(new QName("http://inventory.inbound.soap.shoppers.ibssoln.com/", "inventoryProviderServicePortSoap11"), InventoryProviderServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InventoryProviderServicePort
     */
    @WebEndpoint(name = "inventoryProviderServicePortSoap11")
    public InventoryProviderServicePort getInventoryProviderServicePortSoap11(WebServiceFeature... features) {
        return super.getPort(new QName("http://inventory.inbound.soap.shoppers.ibssoln.com/", "inventoryProviderServicePortSoap11"), InventoryProviderServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (INVENTORYPROVIDERSERVICEPORTSERVICE_EXCEPTION!= null) {
            throw INVENTORYPROVIDERSERVICEPORTSERVICE_EXCEPTION;
        }
        return INVENTORYPROVIDERSERVICEPORTSERVICE_WSDL_LOCATION;
    }

}
